<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.shangxun.www</groupId>
  <artifactId>springMybatisMaven</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>springMybatisMaven Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
 <!--
 http://www.blogjava.net/iduido/archive/2012/11/14/391330.html
 配置静态资源路径，用于将来打zip包使用
    关于jenkins的使用及自动化配置步骤，在本博上篇已经有所介绍，这里只列下如何使用maven的强大插件assembly
1、假设静态资源的目录结构为：
            static/js/xxxx
            static/css/xxxx
            static/images/xxxx

            static/configure/xxx.js
            static/pom.xml
            static/assembly.xml
2、配置pom.xml
3、配置assembly.xml
4、jenkins中，当构建任务结束后，将生成static-all.zip文件，配置自动上传至目标服务器，最后使用命令unzip -o static-all.zip解压覆盖即可    
  <properties>
     <fileName>static</fileName>                     
     <SettingJs>configure/xxx.js</SettingJs>
  </properties>
  -->
  
  <dependencies>
  <!--01 spring aop的jar包 aopalliance-1.0.jar-->
  <dependency>
    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.aopalliance-1.0</artifactId>
    <version>1.0.0-rc1</version>
  </dependency>
   
  <!--02 spring aspect的jar包 aspectjweaver-1.7.4.jar-->
  <dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>1.7.4</version>
  </dependency>
  
  <!--03 spring 文件上传的jar包 commons-fileupload-1.2.2.jar-->
  <dependency>
    <groupId>commons-fileupload</groupId>
    <artifactId>commons-fileupload</artifactId>
    <version>1.2.2</version>
  </dependency>
  
  <!--04 spring 调试log输出的jar包 commons-logging-1.1.1.jar-->
  <dependency>
    <groupId>commons-logging</groupId>
    <artifactId>commons-logging</artifactId>
    <version>1.1.3</version>
  </dependency>
  
  <!--05 数据库连接池 druid 是阿里巴巴的jar包 druid-0.2.9.jar 远程中央库中没有手动引入的^_^-->
  <dependency>
    <groupId>druid</groupId>
    <artifactId> druid</artifactId>
    <version>0.2.9</version>
  </dependency>  
  
  <!--06 jstl-1.2.jar 基本标签jar包 -->
  <dependency>
    <groupId>jstl</groupId>
    <artifactId>jstl</artifactId>
    <version>1.2</version>
  </dependency>
  
   <!--07 junit-4.11.jar 测试jar包 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
     <!--08 持久层框架 mybatis-3.1.1.jar jar包 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.1.1</version>
    </dependency>
    
    <!--09 持久层框架mybatis和spring整合 mybatis-spring.jar jar包 ;scope默认是compile表示编译的时候把当前jar包打到项目一起-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.1.1</version>
      <scope>compile</scope>
    </dependency>
    
    <!--10 mysql数据库 mysql-connector-java-5.1.21.jar jar包;scope是runtime表示只在运行时打入该jar包 -->
    <dependency>
       <groupId>mysql</groupId>
       <artifactId>mysql-connector-java</artifactId>
        <version>5.1.24</version>
        <scope>runtime</scope>
     </dependency>
     
     
     <!--11 JEE servlet-api-3.0-alpha.jar jar包;scope是provided表示私有打包的时候不会打包如jar包中，因为tomcat里提供了该jar包 --> 
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <!--12 spring-test-3.2.0.RELEASE.jar jar包 -->
    <dependency>
     <groupId>org.springframework</groupId>
     <artifactId>spring-test</artifactId>
     <version>3.2.0.RELEASE</version>
    </dependency>
    
	<!-- 日志文件管理包 -->
	<!-- log start -->
	<dependency>
	  <groupId>log4j</groupId>
	  <artifactId>log4j</artifactId>
	  <version>1.2.14</version>
	</dependency>
		   
    <!--13 standard-1.1.2.jar jar包 -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>
    
  </dependencies>

  
  <build>
 
    <finalName>springMybatisMaven</finalName>
     <!--插件  开始-->   
    <pluginManagement>  
            <plugins>  
                <!--  -->
                <plugin>  
                    <groupId>org.apache.maven.plugins</groupId>  
                    <artifactId>maven-resources-plugin</artifactId>  
                    <version>2.6</version>  
                    <configuration>  
                        <encoding>UTF-8</encoding>  
                    </configuration>  
                </plugin>  
  
                <plugin>  
                    <groupId>org.apache.maven.plugins</groupId>  
                    <artifactId>maven-compiler-plugin</artifactId>  
                    <version>2.5.1</version>  
                    <configuration>  
                        <encoding>UTF-8</encoding>  
                    </configuration>  
                </plugin>   
                             
                
                <!--上传到tomcat热部署插件 tomcat6  开始 -->  
                <plugin>
			        <groupId>org.apache.tomcat.maven</groupId>
			        <artifactId>tomcat6-maven-plugin</artifactId>
			        <version>2.0-beta-1</version>
			        <configuration>
			          <url>http://localhost:8088/manager</url>
			          <server>tomcat6</server>
			          <username>admin</username> 
			          <password>admin</password>
			          <path>/huifentao</path>
			          <contextReloadable>true</contextReloadable>
			          
			        </configuration>
			      </plugin> 
                <!--上传到tomcat热部署插件 tomcat6  结束-->   
            	
            </plugins>  
        </pluginManagement>  

  </build>
  
  
  
</project>
